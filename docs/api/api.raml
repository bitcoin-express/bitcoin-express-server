#%RAML 1.0
title: Bitcoin-Express Merchant Gateway
version: v1.0a
baseUri: https://api.gateway.url/{version}
description: |
  This is an initial draft of documentation for Bitcoin-Express Merchant Gateway API.
protocols: [HTTPS]
mediaType: application/json
securitySchemes:
  AuthToken:
    type: Pass Through
    description: |
      By default each request - unless stated otherwise - requires authentication header passed together with the request.
    describedBy:
      headers:
        BE-MG-Auth-Token: string
      responses:
annotationTypes:
  deprecated: nil
  experimental: nil | string
traits: !include traits/traits.raml
resourceTypes:
types:
  TBD:
    type: object
    displayName: Other types - to be implemented
  JSONResponse: !include schemas/JSONResponse.raml
  Message: !include schemas/primitives/Message.raml
  TransactionPaymentRequest:
    type: !include schemas/TransactionPaymentRequest.raml
    displayName: PaymentRequest
  TransactionTransferBlockchainRequest:
    type: !include schemas/TransactionTransferBlockchainRequest.raml
    displayName: TransferBlockchainRequest
  TransactionTransferCoinFileRequest:
    type: !include schemas/TransactionTransferCoinFileRequest.raml
    displayName: TransferCoinFileRequest
  TransactionPaymentDetails:
    type: !include schemas/TransactionPaymentDetails.raml
    displayName: PaymentDetails
  TransactionPaymentRequestResponse:
    type: !include schemas/TransactionPaymentRequestResponse.raml
    displayName: PaymentRequestResponse
  TransactionPaymentConfirmation: !include schemas/TransactionPaymentConfirmation.raml
  TransactionPaymentConfirmationResponse:
    type: !include schemas/TransactionPaymentConfirmationResponse.raml
    displayName: PaymentConfirmationResponse
  TransactionDetailsTypes:
    type: array
    items:
      type: TransactionPaymentDetails | TBD
  TransactionRequestTypes:
    type: array
    items:
      type: TransactionPaymentRequest | TransactionTransferBlockchainRequest | TransactionTransferCoinFileRequest
  TransactionRequestResponseTypes:
    type: array
    items:
      type: TransactionPaymentRequestResponse | TBD
  AccountDetails: !include schemas/AccountDetails.raml
  AccountSettings: !include schemas/AccountSettings.raml
  AccountBalance: !include schemas/AccountBalance.raml
  AccountRegisterRequest: !include schemas/AccountRegisterRequest.raml
  //Primitives
  Currency: !include schemas/primitives/Currency.raml
securedBy: AuthToken
/transactions:
  description: |
    All operations on different types of transactions (including payments) for the account authenticated by the token.
  get:
    is: [JSON200Envelope]
    description: |
        Old: /getTransactions

        Return all transactions that matches given parameters and belongs to the authenticated account.
    queryParameters:
      offset?: !include schemas/primitives/Offset.raml
      limit:
        description: Maximum number of items in the returned dataset.
        default: 100
        required: false
        type: integer
        example: 100
      order_by:
        description: Field to sort the returned dataset on.
        default: paid
        required: false
        type: string
        example: paid
        enum:
          - paid
          - created
      order:
        description: Direction to sort the returned dataset on - either as ascending or descending.
        default: descending
        required: false
        type: string
        example: ascending
        enum:
          - ascending
          - descending
      before:
        description: Shows only records created before this date/time. Uses ISO 8601 as a date/time format. Can be used in conjunction with 'after' parameter.
        required: false
        type: datetime
        example: 2018-12-24T12:00:00Z
      after:
        description: Shows only records created after this date/time. Uses ISO 8601 as a date/time format. Can be used in conjunction with 'before' parameter.
        required: false
        type: datetime
        example: 2018-12-24T12:00:00Z
      type: !include schemas/primitives/TransactionType.raml
      status:
        description: Shows only records in a given status. If this parameter is given 'only_valid' is ignored.
        required: false
        type: string
        enum:
          - initial
          - resolved
          - expired
          - aborted
          - processing
        example: initial
      only_valid:
        type: boolean
        description: By default only valid, non-expired transactions are returned. In order to get all transaction set this option to false.
        required: false
        default: true
    responses:
      200:
        description: Method always returns enveloped JSON with the returned dataset placed under the key 'body'. If no results were found either because there were no transactions registered under the account or due to excluding parameters an empty array is returned.
        body:
          application/json:
            properties:
              body:
                description: Actual data returned by the method.
                minItems: 0
                required: true
                type: array
                items:
                  type: TransactionDetailsTypes
            example: !include examples/TransactionsGetResponse.json
  post:
    is: [JSON201Envelope]
    description: |
      Old: /createPaymentRequest

      Creates a new transaction of a given type. Currently three types of transactions are available:
      - Payment (payment) - creates a payment request to be processed by the Merchant/Buyer in order to pay for an order created on Merchant's end,
      - Blockchain Transfer (blockchain-transfer) - transfers a requested currency (defined value) to a blockchain,
      - Coin File Transfer (coin-file-transfer) - exports a requested currency (defined value) to the Wallet-ready file.

      Each type of transaction's request has a diffent parameters and responses. In order to define which type of transaction should be created 'type' parameter has to be set to the correct value.
    body:
      application/json:
        type: TransactionRequestTypes
    responses:
      201:
        body:
          application/json:
            properties:
              body:
                description: Actual data returned by the method.
                minItems: 0
                required: true
                type: array
                items:
                  type: TransactionRequestResponseTypes
/transaction:
  /{transaction_id}:
    description: |
      Operations that work on a single, specified transation.
    get:
      is: [JSON200Envelope]
      description: Returns information about transaction. Depending on the type of transaction returned dataset can differ.
      responses:
        200:
         body:
          application/json:
            properties:
              body:
                description: Actual data returned by the method.
                minItems: 0
                required: true
                type: TransactionDetailsTypes
            example: !include examples/TransactionGetResponse.json
        403:
          body:
            application/json:
              type: JSONResponse
              example: |
                {
                  "success": false,
                  "body": [],
                  "messages": [
                    {
                      "type": "error",
                      "body": "You are not authorised to view this transaction."
                    }
                  ]
                }

    /payment:
      post:
        securedBy:
        is: [JSON202Envelope]
        description: |
          Old: /payment

          Accepts object with information needed to complete the transaction, including Coins. Information procided in this request are send to an issuer and included in the original payment request object.
        body:
          application/json:
            type: TransactionPaymentConfirmation
        responses:
          202:
            body:
              application/json:
                properties:
                  body:
                    description: Actual data returned by the method.
                    minItems: 0
                    required: true
                    type: array
                    items:
                      type: TransactionPaymentConfirmationResponse
/accounts:
  post:
    is: [JSON201Envelope]
    securedBy:
    body:
      application/json:
        description: |
          Old: /register

          Creates a new merchant's account in the system
        type: AccountRegisterRequest
    responses:
      201:
        body:
          application/json:
            properties:
              body:
                description: Actual data returned by the method.
                minItems: 0
                required: true
                type: array
                items:
                  type: AccountDetails
            example: !include examples/AccountsPostResponse.json
/account:
  /settings:
    get:
      is: [JSON200Envelope]
      description: Get all current settings for the account
      responses:
        200:
          body:
            application/json:
              properties:
                body:
                  description: Actual data returned by the method.
                  minItems: 0
                  required: true
                  type: array
                  items:
                    type: AccountSettings
              example: !include examples/AccountSettingsGetResponse.json
    patch:
      is: [JSON202Envelope]
      description: |
        Old: /setConfig

        Modifies chosen account's settings
      body:
        application/json:
          type: AccountSettings
          minProperties: 1
      responses:
        202:
          body:
            application/json:
              properties:
                body:
                  description: Actual data returned by the method.
                  minItems: 0
                  required: true
                  type: array
                  items:
                    type: AccountSettings
              example: !include examples/AccountSettingsPatchResponse.json
  /balance:
    get:
      is: [JSON200Envelope]
      description: |
        Old: getBalance

        Get a list of currency balances
      queryParameters:
        currency:
          type: Currency
          required: false
          description: For which currency should the balance be returned for.
      responses:
        200:
          body:
            application/json:
              properties:
                body:
                  description: Actual data returned by the method.
                  minItems: 0
                  required: true
                  type: array
                  items:
                    type: AccountBalance
              examples:
                set-currency: !include examples/AccountBalanceResponseSingleCurrency.json
                all-currencies: !include examples/AccountBalanceResponceAllCurrencies.json
